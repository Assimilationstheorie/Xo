server_names_hash_bucket_size 64;
proxy_cache_path /tmp/nxc levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
server_tokens off;

disable_symlinks off;
client_max_body_size 100M;
charset utf-8;


# Default server

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	root /var/www/html/default;
	index index.html index.php;
	server_name _;

	location / {
		try_files $uri $uri/ =404; # Or 444
	}
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 default_server ssl http2;
    root /var/www/html/default;
    index index.html index.php;
    server_name _;

    ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
        try_files $uri $uri/ =404;
    }
}


# Domain VirtualHost

server {
    listen 80;
    listen [::]:80;
    root /var/www/html/domain.xx/public;
    index index.php;
    server_name static.domain.xx;

	location / {
		try_files $uri $uri/ =404;
	}
}

server {
    listen 80;
    listen [::]:80;

    root /var/www/html/domain.xx/public;
    index index.php;
    server_name domain.xx www.domain.xx;

    location = /favicon.ico {
        rewrite . /favicon/favicon.ico;
    }

	# redirect www to non www and http to https
    # return 301 https://$host$request_uri;

	# Unhash this for https
    # return 301 https://domain.xx$request_uri;
}

server {
    listen              443 ssl http2;
    keepalive_timeout   60;

    root /var/www/html/domain.xx/public;
    index index.php;
    server_name domain.xx www.domain.xx;

    ssl_certificate     /etc/letsencrypt/live/domain.xx/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domain.xx/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location = /favicon.ico {
        rewrite . /favicon/favicon.ico;
    }

    location ~ /(Cache|cache|vendor|.git) {
            deny all;
            return 404;
    }

    location / {
		proxy_cache my_cache;

        # Get file or folder or error
        # try_files $uri $uri/ =404;

        # Get file or folder or redirect uri to url param in index.php
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        # Php-fpm
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;

        # Php-fpm sockets
        # fastcgi_param HTTP_PROXY "";
        # fastcgi_pass 127.0.0.1:9000;
        # fastcgi_index index.php;
        # include fastcgi_params;
    }

    location ~* \.(html|xml|txt|js|css|png|jpg|jpeg|gif|ico|svg|flv|pdf|mp3|mp4|mov)$ {
		expires 1M;
		access_log off;
		add_header Set-Cookie "";
		add_header Cache-Control "public";

        # add_header Cache-Control "public, no-transform";
		# add_header Cache-Control "max-age=31536000";
		# add_header X-UA-Compatible "IE=Edge,chrome=1";
		# add_header X-Cache-Status $upstream_cache_status;
		# fastcgi_hide_header Set-Cookie;
    }

    location /produkt/nazwa {
        return 404;
    }

    client_max_body_size 100M;
    # rewrite ^/kategoria/menu$ /menu permanent;
}


# For more headers
# https://github.com/h5bp/server-configs-nginx